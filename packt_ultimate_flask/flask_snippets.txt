https://www.freesqldatabase.com/account/

# flask active link
	{% if request.endpoint == 'add_food' %}class="active" {% endif %}
	class=" {{ 'active' if request.endpoint=='add_food' else '' }}" 

# flask snippets location
	C:\Users\Alberto\.vscode\extensions\cstrap.flask-snippets-0.1.3


# add command
	@app.cli.command('create-all')
	def create_all():
		models.db.create_all()
		print('database initialized')

	### or ###

	from flask.cli import with_appcontext
	@click.command('create-all')
	@with_appcontext
	def create_all():
		models.db.create_all()
		print('database initialized')

	app.cli.add_command(create_all)


# dynamic form
	{% with endpoint=url_for('register'), buttonText='Register' %}
	  {% include 'includes/form.html' %}
	{% endwith %}
	
	<form method="POST" action="{{endpoint}}">
	  <input type="text" name="inputName" placeholder="Name">
	  <input type="password" name="inputPassword" placeholder="Password">
	  <button type="submit">{{buttonText}}</button>
	</form>

# relationships
	from sqlalchemy import ForeignKey
	from sqlalchemy import Integer, String, DateTime, Table, Column
	from sqlalchemy.orm import Mapped, mapped_column, relationship
	
	class Member(db.Model):
		orders: Mapped[list['Order']] = relationship(backref='member', lazy='dynamic')
		courses: Mapped[list['Course']] = relationship(secondary='secondary_table', backref='members', lazy='dynamic')


	# one to many
	class Order(db.Model):
		member_id: Mapped[int] = mapped_column(ForeignKey(Member.id))


	# many to many
	secondary_table = Table(
		'secondary_table',
		db.metadata,
		Column('member_id', Integer, ForeignKey('member.id')),
		Column('course_id', Integer, ForeignKey('course.id')),
	)
	
	class Course(db.Model):
		pass
	
	
	# backref: creates(Member.orders and Order.Member) 


# sqlalchemy base model
	class BaseModel(db.Model):
		__abstract__ = True
		# The __abstract__ attribute tells SQLAlchemy that this model should not be created in the database.
		# Thus, when creating tables/migrations this class would be ignored.


# jinja index
{% for item in itemss %}
{{ loop.index }}
{% else %}
No items here
{% endfor %}

